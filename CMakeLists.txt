# Defines bitshares library target.
project( BitShares )
cmake_minimum_required( VERSION 2.8.12 )

list( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules" )
list( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/libraries/fc/GitVersionGen" )
include( GetGitRevisionDescription )
get_git_head_revision( GIT_REFSPEC GIT_SHA2 )


if( WIN32 )
    set( DB_VERSION 60 )
    message( STATUS "Configuring Bitshares on WIN32")
    set( ZLIB_LIBRARIES "" )
    set( LEVEL_DB_DIR vendor/leveldb-win )

    set(BOOST_ROOT $ENV{BOOST_ROOT})
    set(Boost_USE_DEBUG_PYTHON ON)
    set(Boost_USE_MULTITHREADED ON)
    set(Boost_USE_STATIC_LIBS OFF)
    set(BOOST_ALL_DYN_LINK ON) # force dynamic linking for all libraries

else( WIN32 )
    # Apple AND Linux Options Here
    find_package( ZLIB REQUIRED )
    set( LEVEL_DB_DIR vendor/leveldb-1.12 )

    if( APPLE )
        # Apple Specific Options Here
        message( STATUS "Configuring Bitshares on OS X" )
        set( CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -std=c++11 -stdlib=libc++  -Wall -ferror-limit=4" )
    else( APPLE ) 
        # Linux Specific Options Here
        message( STATUS "Configuring Bitshares on Linux" )
        set( rt_library rt )
        set( pthread_library pthread)

        SET (BOOST_ROOT "/home/bkb/src/boost/boost_1_56_0")
        SET (BOOST_INCLUDEDIR "${BOOST_ROOT}/include")
        SET (BOOST_LIBRARYDIR "${BOOST_ROOT}/lib")

        SET (BOOST_MIN_VERSION "1.50.0")
        set (Boost_NO_BOOST_CMAKE ON)
        FIND_PACKAGE(Boost ${BOOST_MIN_VERSION} REQUIRED)
        if (NOT Boost_FOUND)
            message(FATAL_ERROR "Fatal error: Boost (version >= 1.56) required.")
        else()
            message(STATUS "Setting up BOOST")
            message(STATUS " Includes - ${Boost_INCLUDE_DIRS}")
            message(STATUS " Library  - ${Boost_LIBRARY_DIRS}")
            include_directories(${Boost_INCLUDE_DIRS})
            link_directories(${Boost_LIBRARY_DIRS})
        endif (NOT Boost_FOUND)

    endif( APPLE )
endif( WIN32 )

set(Boost_USE_STATIC_LIBS ON)
find_package( Boost 1.54 REQUIRED COMPONENTS 
                  thread 
                  date_time 
                  system 
                  filesystem 
                  program_options 
                  serialization 
                  chrono 
                  unit_test_framework 
                  context 
                  coroutine
                  locale )

include_directories( libraries/fc/include )
include_directories( libraries/blockchain/include )
include_directories( ${Boost_INCLUDE_DIR} )

add_subdirectory( libraries )
add_subdirectory( "${LEVEL_DB_DIR}"    )
add_subdirectory( vendor/miniupnp/miniupnpc )
#add_subdirectory( programs  )
